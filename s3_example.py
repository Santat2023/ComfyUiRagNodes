import boto3
from botocore.client import Config
from PIL import Image
import io

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è MinIO
MINIO_ENDPOINT = "http://localhost:9000"
ACCESS_KEY = "admin"
SECRET_KEY = "admin123"
BUCKET_NAME = "images"

# –°–æ–∑–¥–∞—ë–º –∫–ª–∏–µ–Ω—Ç
s3 = boto3.client(
    "s3",
    endpoint_url=MINIO_ENDPOINT,
    aws_access_key_id=ACCESS_KEY,
    aws_secret_access_key=SECRET_KEY,
    config=Config(signature_version="s3v4"),
    region_name="us-east-1",
)

def upload_image(local_path: str, object_name: str):
    """–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –≤ MinIO"""
    s3.upload_file(local_path, BUCKET_NAME, object_name)
    print(f"‚úÖ –§–∞–π–ª {local_path} –∑–∞–≥—Ä—É–∂–µ–Ω –∫–∞–∫ {object_name}")

def download_image(object_name: str, local_path: str):
    """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏–∑ MinIO"""
    s3.download_file(BUCKET_NAME, object_name, local_path)
    print(f"üì• –§–∞–π–ª {object_name} —Å–∫–∞—á–∞–Ω –≤ {local_path}")

def load_image_from_s3(object_name: str):
    """–°—á–∏—Ç—ã–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ S3 –ø—Ä—è–º–æ –≤ –ø–∞–º—è—Ç—å"""
    response = s3.get_object(Bucket=BUCKET_NAME, Key=object_name)
    file_bytes = response["Body"].read()   # –±–∞–π—Ç—ã —Ñ–∞–π–ª–∞
    image = Image.open(io.BytesIO(file_bytes))  # –∑–∞–≥—Ä—É–∑–∫–∞ –≤ PIL Image
    return image

def load_image_bytes_from_s3(object_name: str):
    """–°—á–∏—Ç—ã–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ S3 –ø—Ä—è–º–æ –≤ –ø–∞–º—è—Ç—å"""
    response = s3.get_object(Bucket=BUCKET_NAME, Key=object_name)
    file_bytes = response["Body"].read()   # –±–∞–π—Ç—ã —Ñ–∞–π–ª–∞
    return file_bytes

def clear_bucket(bucket_name: str):
    """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –±–∞–∫–µ—Ç–∞"""
    # –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤
    response = s3.list_objects_v2(Bucket=bucket_name)

    if "Contents" not in response:
        print("ü™£ –ë–∞–∫–µ—Ç –ø—É—Å—Ç")
        return

    # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    objects_to_delete = [{"Key": obj["Key"]} for obj in response["Contents"]]

    # —É–¥–∞–ª—è–µ–º –ø–∞—á–∫–æ–π
    s3.delete_objects(Bucket=bucket_name, Delete={"Objects": objects_to_delete})
    print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ {len(objects_to_delete)} –æ–±—ä–µ–∫—Ç–æ–≤ –∏–∑ –±–∞–∫–µ—Ç–∞ '{bucket_name}'")

def create_bucket(bucket_name: str):
    """–°–æ–∑–¥–∞—ë—Ç –±–∞–∫–µ—Ç, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç"""
    try:
        s3.head_bucket(Bucket=bucket_name)
        print(f"ü™£ –ë–∞–∫–µ—Ç '{bucket_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    except:
        s3.create_bucket(Bucket=bucket_name)
        print(f"ü™£ –ë–∞–∫–µ—Ç '{bucket_name}' —Å–æ–∑–¥–∞–Ω")


"""if __name__ == "__main__":
    # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ bucket —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    try:
        s3.head_bucket(Bucket=BUCKET_NAME)
    except:
        s3.create_bucket(Bucket=BUCKET_NAME)
        print(f"ü™£ Bucket '{BUCKET_NAME}' —Å–æ–∑–¥–∞–Ω")

    # –ü—É—Ç–∏
    #local_upload = "fox.jpg"
    local_upload = r"F:\MyProjects\Diploma\ChromaDb\fox.jpg"
    object_name = "animals/fox.jpg"
    local_download = "fox_downloaded.jpg"

    # –ó–∞–≥—Ä—É–∂–∞–µ–º
    upload_image(local_upload, object_name)

    # –°–∫–∞—á–∏–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
    download_image(object_name, local_download)"""
